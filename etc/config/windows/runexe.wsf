<?xml version="1.0" ?>
<package>
    <comment>
    PrimalCode wizard generated file.
    </comment>
    <job id="doexe" prompt="no">
        <?job error="false" debug="false" ?>
        <runtime>
            <description>
Helper to run tests.
            </description>
            <named helpstring="The cmd to be excuted" 
                name="RUNCMD" required="true" type="string"/>
            <named helpstring="The output file name" 
                name="OUTFILE" required="false" type="string"/>
            <example>cscript doexe.wsf 
            </example>
            <usage>
cscript doexe.wsf /RUNCMD:@RUNCMD [/OUTFILE:@OUTFILE] where
@RUNCMD is a command to be executed,
@OUTFILE is an output file name. If not set, output goes to Stdout
            </usage>
        </runtime>
        <object id="fso" progid="Scripting.FileSystemObject"/>
        <object id="WshShell" progid="WScript.Shell"/>
        <script id="doexe" language="JScript">
<![CDATA[
//
// Tests running script
//

var description = new doexe; // run

function doexe()
{
    if (!WScript.Arguments.Named.Exists("RUNCMD"))
    {
        WScript.StdErr.WriteLine(
            "Generate: Missing required argument RUNCMD.");
        WScript.Arguments.ShowUsage();
        WScript.Quit(2);
    }
    
    var runCmd = WScript.Arguments.Named("RUNCMD");
    var outFileName = "";
    if (WScript.Arguments.Named.Exists("OUTFILE"))
    {
        outFileName = WScript.Arguments.Named("OUTFILE");
    }
    
    var cmd = "cmd /C \"" + runCmd;
    if (outFileName != "")
        cmd += " > " + outFileName;
    cmd += "\"";
    
    var res = WshShell.Run(cmd, 7, true);
            
    WScript.Quit(res);
}

]]>
        </script>
    </job>
</package>
